<% content_for :page_title do %>
	<span class="page_title">Text annotation</span>
<% end %>

<% options_default = TextAnnotator::OPTIONS_DEFAULT %>

<fieldset>
	<legend>Demo</legend>
	<%= form_tag '/text_annotation', id: 'text_annotation', method: :get do -%>
		<%= text_area_tag :text, params[:text], required: true, placeholder: 'text', style: "height:50px" %>

		<table class="options">
			<tr>
				<th><%= label_tag :tokens_len_min, "Min Length", title: "The minimum number of tokens to be considered. Leave it blank to use the default setting of individual dictionaries." %></th>
				<th><%= label_tag :tokens_len_max, "Max Length", title: "The maximum number of tokens to be considered. Leave it blank to use the default setting of individual dictionaries" %></th>
				<th><%= label_tag :threshold, nil, title: "The output will include only the annotations whose matching score is above the threshold. Leave it blank to use the default setting of individual dictionaries" %></th>
				<th><%= label_tag :ngram, "N-gram", title: "Use n-gram similarity. Use it together with a low threshold for a higher sensitivity. However, it will slow the speed." %></th>
				<th><%= label_tag :abbreviation, "Abbreviation", title: "Abbreviations which are locally defined in an input document will be automatically detected. It defaults to true." %></th>
				<th><%= label_tag :longest, "Longest", title: "Longest only annotation: the output will not include embedded annotations." %></th>
				<th><%= label_tag :superfluous, "Superfluous", title: "Superflous annotation: all the annotations with a higher score than the threshold will be produced, while, in the default mode, only the ones with the highest score will be produced." %></th>
				<th><%= label_tag :verbose, "Verbose", title: "Verbose output: the output will include information for debugging." %></th>
			</tr>
			<tr>
				<td><%= text_field_tag :tokens_len_min, params[:tokens_len_min].present? ? params[:tokens_len_min]: nil, type: :number, min:1, max:3, step:1 %></td>
				<td><%= text_field_tag :tokens_len_max, params[:tokens_len_max].present? ? params[:tokens_len_max]: nil, type: :number, min:3, max:30, step:1 %></td>
				<td><%= text_field_tag :threshold, params[:threshold].present? ? params[:threshold]: nil, type: :number, min:0.5, max:1, step:0.01 %></td>
				<td><%= check_box_tag :ngram, true, (params[:text] ? params[:ngram] : options_default[:ngram]) %></td>
				<td><%= check_box_tag :abbreviation, true, (params[:text] ? params[:abbreviation] : options_default[:abbreviation]) %></td>
				<td><%= check_box_tag :longest, true, (params[:text] ? params[:longest] : options_default[:longest]) %></td>
				<td><%= check_box_tag :superfluous, true, (params[:text] ? params[:superfluous] : options_default[:superfluous]) %></td>
				<td><%= check_box_tag :verbose, true, (params[:text] ? params[:verbose] : options_default[:verbose]) %></td>
			</tr>
		</table>

		<textarea id="dictionaries" name="dictionaries" style="display:none"></textarea>

		<div class="center-align">
			<%= button_tag 'Reset', type: :reset, id: :reset, class: :button, style: 'width: 10em' %>
			<%= submit_tag 'Submit', class: :button, style: 'width: 18em' %>
			<%= button_tag 'Submit (POST)', id: :get_text_annotation, type: :button, class: :button, style: 'width: 10em', onclick: 'submit_get_text_annotation()', title: 'Use it for long text. The result cannot be bookmarked.' %>
		</div>

		<script type="text/javascript">
			function submit_get_text_annotation() {
				var form = document.getElementById('text_annotation');
				form.method = 'post';
				form.submit()
			}
		</script>

		<% unless @result.nil? || @result.empty? %>
			<h2>Result in <%= link_to 'TextAE', 'https://textae.pubannotation.org' %></h2>
			<%= render :partial => 'textae_css_js'-%>
			<div class="textae-editor"><%= @result.to_json %></div>

			<h2>Result in <%= link_to 'JSON', 'https://www.pubannotation.org/docs/annotation-format/' %></h2>
			<pre style="white-space:pre-wrap; border:1px solid black"><%= JSON.pretty_generate @result %></pre>
		<% end %>

	<% end %>
</fieldset>

<fieldset>
	<legend>Dictionary Selection</legend>
	<%= render partial: 'dictionaries/dictionary_selection' %>
</fieldset>

<fieldset>
	<legend>REST API for annotation</legend>

	<table style="display:inline-block; vertical-align: middle">
	<tr>
	<td><span class='http_method'>GET</span>|<span class='http_method'>POST</span></td>
	<td><div id="rest_url"></div></td>
	<td>
	<button class="btn" id="clip-btn-url" data-clipboard-action="copy" data-clipboard-target="#rest_url">
		<%= image_tag 'clippy.svg', class: 'clippy', width: 13, alt: 'Copy to clipboard', title: 'Copy to clipboard' %>
	</button>
	</td>
	</tr>
	</table>
	<div style="display:inline-block; vertical-align: middle"><%= content_tag :i, '', class:"fa fa-arrow-right"%> paste it to <a href="https://pubannotation.org">PubAnnotation</a></div>

	<h2>Example cURL command</h2>
	<table>
	<tr>
	<th>1</th>
	<td style="text-align:center"><span class='http_method'>GET</span></td>
	<td><div id="curl_command_get"></div></td>
	<td>
		<button class="btn" id="clip-btn-get" data-clipboard-action="copy" data-clipboard-target="#curl_command_get">
			<%= image_tag 'clippy.svg', class: 'clippy', width: 13, alt: 'Copy to clipboard' %>
		</button>
	</td>
	</tr>

	<tr>
	<th>2</th>
	<td><span class='http_method'>POST</span></td>
	<td><div id="curl_command_post1"></div></td>
	<td>
		<button class="btn" id="clip-btn-post1" data-clipboard-action="copy" data-clipboard-target="#curl_command_post1">
			<%= image_tag 'clippy.svg', class: 'clippy', width: 13, alt: 'Copy to clipboard' %>
		</button>
	</td>
	</tr>
	<tr>
	<th>3</th>
	<td><span class='http_method'>POST</span></td>
	<td><div id="curl_command_post2"></div></td>
	<td>
		<button class="btn" id="clip-btn-post2" data-clipboard-action="copy" data-clipboard-target="#curl_command_post2">
			<%= image_tag 'clippy.svg', class: 'clippy', width: 13, alt: 'Copy to clipboard' %>
		</button>
	</td>
	</tr>
	<tr>
	<th>4</th>
	<td><span class='http_method'>POST</span></td>
	<td><div id="curl_command_post3"></div></td>
	<td>
		<button class="btn" id="clip-btn-post3" data-clipboard-action="copy" data-clipboard-target="#curl_command_post3">
			<%= image_tag 'clippy.svg', class: 'clippy', width: 13, alt: 'Copy to clipboard' %>
		</button>
	</td>
	</tr>

	</table>

</fieldset>

<fieldset>
<legend>REST API for batch annotation</legend>

<table>
<tr>
<td><span class='http_method'>POST</span></td>
<td><div id="batch_rest_url"></div></td>
<td>
<button class="btn" id="clip-btn-url" data-clipboard-action="copy" data-clipboard-target="#batch_rest_url">
	<%= image_tag 'clippy.svg', class: 'clippy', width: 13, alt: 'Copy to clipboard', title: 'Copy to clipboard' %>
</button>
</td>
</tr>
</table>

<h2>Example cURL command</h2>
<table>
<tr>
<th>1</th>
<td><span class='http_method'>POST</span></td>
<td><div id="batch_curl_command"></div></td>
<td>
	<button class="btn" id="clip-btn-get" data-clipboard-action="copy" data-clipboard-target="#batch_curl_command">
		<%= image_tag 'clippy.svg', class: 'clippy', width: 13, alt: 'Copy to clipboard' %>
	</button>
</td>
</tr>

</table>
</fieldset>

<script type="text/javascript">
	$(function() {
		dictionarySelectionInit();

		var clipboard_url   = new Clipboard('#clip-btn-url');
		var clipboard_get   = new Clipboard('#clip-btn-get');
		var clipboard_post1 = new Clipboard('#clip-btn-post1');
		var clipboard_post2 = new Clipboard('#clip-btn-post2');
		var clipboard_post3 = new Clipboard('#clip-btn-post3');
	});

	$('#dictionaries').change(function() {
		set_url();
	});

	$('#tokens_len_min').change(function() {
		set_url();
	});

	$('#tokens_len_max').change(function() {
		set_url();
	});

	$('#threshold').change(function() {
		set_url();
	});

	$("#abbreviation").change(function() {
		set_url();
	});

	$("#longest").change(function() {
		set_url();
	});

	$("#superfluous").change(function() {
		set_url();
	});

	$("#verbose").change(function() {
		set_url();
	});

	$('#text_annotation').on('reset', function(e) {
		setTimeout(function() {
			dictionarySelectionReset();
			set_url();
		}, 0);
	});

	function set_url() {
		var params = [];

		if ($('#dictionaries').text()) {
			var param_dics = 'dictionary=' + $('#dictionaries').text();
			params.push(param_dics);
		}

		var tokens_len_min = $('#tokens_len_min').val();
		if (tokens_len_min != '') {
			var param = 'tokens_len_min=' + tokens_len_min;
			params.push(param);
		}

		var tokens_len_max = $('#tokens_len_max').val();
		if (tokens_len_max != '') {
			var param = 'tokens_len_max=' + tokens_len_max;
			params.push(param);
		}

		var threshold = $('#threshold').val();
		if (threshold != '') {
			var param = 'threshold=' + threshold;
			params.push(param);
		}

		var abbreviation = $('#abbreviation').is(':checked');
		if (abbreviation != <%= options_default[:abbreviation] %>) {
			var param = 'abbreviation=' + abbreviation;
			params.push(param);
		}

		var longest = $('#longest').is(':checked');
		if (longest != <%= options_default[:longest] %>) {
			var param = 'longest=' + longest;
			params.push(param);
		}

		var superfluous = $('#superfluous').is(':checked');
		if (superfluous != <%= options_default[:superfluous] %>) {
			var param = 'superfluous=' + superfluous;
			params.push(param);
		}

		var verbose = $('#verbose').is(':checked');
		if (verbose != <%= options_default[:verbose] %>) {
			var param = 'verbose=' + verbose;
			params.push(param);
		}

		var url = '<%= root_url %>text_annotation.json'
		if (params.length > 0) {url += '?' + params.join('&')}
		$('#rest_url').text(url);

		var command_get   = 'curl -G --data-urlencode text="example text" "' + url + '"';
		var command_post1 = 'curl -d text="example text" "' + url + '"';
		var command_post2 = 'curl -H "content-type:application/json" -d \'{"text":"example text"}\' "' + url + '"';
		var command_post3 = 'curl -H "content-type:text/plain" -d "example text" "' + url + '"';

		$('#curl_command_get').text(command_get);
		$('#curl_command_post1').text(command_post1);
		$('#curl_command_post2').text(command_post2);
		$('#curl_command_post3').text(command_post3);

		var batch_url = '<%= root_url %>annotation_tasks'
		if (params.length > 0) {batch_url += '?' + params.join('&')}
		$('#batch_rest_url').text(batch_url);

		var batch_command = 'curl -H "content-type:application/json" -d \'[{"text":"example text 1"},{"text":"example text 2"}]\' "' + batch_url + '"';
		$('#batch_curl_command').text(batch_command);
	}
</script>
