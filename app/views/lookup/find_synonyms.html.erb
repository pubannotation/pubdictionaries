<% content_for :page_title do %>
	<span class="page_title">Find synonyms</span>
<% end %>

<% options_default = TextAnnotator::OPTIONS_DEFAULT %>

<fieldset>
	<legend>Demo</legend>
	<%= form_tag '/find_synonyms', id: 'find_synonyms', method: :post do -%>
		<%= text_area_tag :text, params[:text], required: true, placeholder: 'text', style: "height:100px" %>
		<%= text_field_tag :term, params[:term], type: :text, required: true, placeholder: 'term', style: "width:100%" %>

		<div class="center-align">
			<table class="options">
			<tr>
				<th>
					<%= label_tag :semantic, nil, title: "Use semantic similarity. Use it together with a low threshold for a higher sensitivity. However, it will slow the speed." %>
				</th>
				<th>
					<%= label_tag :threshold_document, nil, title: "The output will include only the terms whose matching score is above the threshold. Leave it blank to use the default setting of individual dictionaries." %>
				</th>
				<th>
					<%= label_tag :threshold_sentence, nil, title: "The output will include only the terms whose matching score is above the threshold. Leave it blank to use the default setting of individual dictionaries." %>
				</th>
				<th>
					<%= label_tag :threshold_term, nil, title: "The output will include only the terms whose matching score is above the threshold. Leave it blank to use the default setting of individual dictionaries." %>
				</th>
			</tr>
			<tr>
				<td>
					<%= check_box_tag :semantic, true, (params[:semantic] ? params[:semantic] : false) == 'true' %>
				</td>
				<td>
					<%= text_field_tag :threshold_document, params[:threshold_document], type: :number, min:0, max:1, step:0.01 %>
				</td>
				<td>
					<%= text_field_tag :threshold_sentence, params[:threshold_sentence], type: :number, min:0, max:1, step:0.01 %>
				</td>
				<td>
					<%= text_field_tag :threshold_term, params[:sem_term], type: :number, min:0, max:1, step:0.01 %>
				</td>
			</tr>
			</table>

			<textarea id="dictionaries" name="dictionaries" style="display:none"></textarea>

			<div>
				<%= button_tag 'Reset', type: :reset, id: :reset, class: :button, style: 'width: 10em' %>
				<%= submit_tag 'Submit', class: :button, style: 'width: 18em' %>
			</div>
		</div>

		<% unless @result.nil? || @result.empty? %>
<!--
			<% if @result[:text].present? %>
				<h2>Text-term distance</h2>
				<table>
					<tr>
						<td> - </td>
						<td><%= @result[:text][:length] %></td>
						<td><%= @result[:text][:distance]%></td>
					</tr>
				</table>
			<% end %>
			<% if @result[:sentences].present? %>
				<h2>Sentences</h2>
				<table>
					<% @result[:sentences].each do |sentence| %>
						<tr>
							<td><%= sentence[:text] %></td>
							<td><%= sentence[:length] %></td>
							<td><%= sentence[:distance]%></td>
						</tr>
					<% end %>	
				</table>
			<% end %>
			<% if @result[:words].present? %>
				<h2>Words</h2>
				<table>
					<% @result[:words].each do |word| %>
						<% if word[:distance] < 0.6 %>
							<tr style="background-color: #faf;">
						<% else %>
							<tr>
						<% end %>
							<td><%= word[:text] %></td>
							<td><%= word[:length] %></td>
							<td><%= word[:distance] %></td>
						</tr>
					<% end %>	
				</table>
			<% end %>
-->
			<% if @result[:candidates].present? %>
				<h2>Candidates</h2>
				<table>
					<% @result[:candidates].each do |candidate| %>
						<% if candidate[:distance] < 0.3 %>
							<% if candidate[:distance] < 0.2 %>
								<tr style="background-color: #eaf;">
							<% else %>
								<tr>
							<% end %>
									<td><%= candidate[:span] %></td>
									<td><%= candidate[:length] %></td>
									<td><%= candidate[:distance] %></td>
								</tr>
						<% end %>
					<% end %>	
				</table>
			<% end %>

		<% end %>
	<% end %>
</fieldset>

<fieldset>
	<legend>Dictionary Selection</legend>
	<%= render partial: 'dictionaries/dictionary_selection' %>
</fieldset>

<fieldset>
	<legend>REST API for annotation</legend>

	<table style="display:inline-block; vertical-align: middle">
	<tr>
	<td><span class='http_method'>GET</span>|<span class='http_method'>POST</span></td>
	<td><div id="rest_url"></div></td>
	<td>
	<button class="btn" id="clip-btn-url" data-clipboard-action="copy" data-clipboard-target="#rest_url">
		<%= image_tag 'clippy.svg', class: 'clippy', width: 13, alt: 'Copy to clipboard', title: 'Copy to clipboard' %>
	</button>
	</td>
	</tr>
	</table>
	<div style="display:inline-block; vertical-align: middle"><%= content_tag :i, '', class:"fa fa-arrow-right"%> paste it to <a href="https://pubannotation.org">PubAnnotation</a></div>

	<h2>Example cURL command</h2>
	<table>
	<tr>
	<th>1</th>
	<td style="text-align:center"><span class='http_method'>GET</span></td>
	<td><div id="curl_command_get"></div></td>
	<td>
		<button class="btn" id="clip-btn-get" data-clipboard-action="copy" data-clipboard-target="#curl_command_get">
			<%= image_tag 'clippy.svg', class: 'clippy', width: 13, alt: 'Copy to clipboard' %>
		</button>
	</td>
	</tr>

	<tr>
	<th>2</th>
	<td><span class='http_method'>POST</span></td>
	<td><div id="curl_command_post1"></div></td>
	<td>
		<button class="btn" id="clip-btn-post1" data-clipboard-action="copy" data-clipboard-target="#curl_command_post1">
			<%= image_tag 'clippy.svg', class: 'clippy', width: 13, alt: 'Copy to clipboard' %>
		</button>
	</td>
	</tr>
	<tr>
	<th>3</th>
	<td><span class='http_method'>POST</span></td>
	<td><div id="curl_command_post2"></div></td>
	<td>
		<button class="btn" id="clip-btn-post2" data-clipboard-action="copy" data-clipboard-target="#curl_command_post2">
			<%= image_tag 'clippy.svg', class: 'clippy', width: 13, alt: 'Copy to clipboard' %>
		</button>
	</td>
	</tr>
	<tr>
	<th>4</th>
	<td><span class='http_method'>POST</span></td>
	<td><div id="curl_command_post3"></div></td>
	<td>
		<button class="btn" id="clip-btn-post3" data-clipboard-action="copy" data-clipboard-target="#curl_command_post3">
			<%= image_tag 'clippy.svg', class: 'clippy', width: 13, alt: 'Copy to clipboard' %>
		</button>
	</td>
	</tr>

	</table>

</fieldset>

<fieldset>
<legend>REST API for batch annotation</legend>

<table>
<tr>
<td><span class='http_method'>POST</span></td>
<td><div id="batch_rest_url"></div></td>
<td>
<button class="btn" id="clip-btn-url" data-clipboard-action="copy" data-clipboard-target="#batch_rest_url">
	<%= image_tag 'clippy.svg', class: 'clippy', width: 13, alt: 'Copy to clipboard', title: 'Copy to clipboard' %>
</button>
</td>
</tr>
</table>

<h2>Example cURL command</h2>
<table>
<tr>
<th>1</th>
<td><span class='http_method'>POST</span></td>
<td><div id="batch_curl_command"></div></td>
<td>
	<button class="btn" id="clip-btn-get" data-clipboard-action="copy" data-clipboard-target="#batch_curl_command">
		<%= image_tag 'clippy.svg', class: 'clippy', width: 13, alt: 'Copy to clipboard' %>
	</button>
</td>
</tr>

</table>
</fieldset>

<script type="text/javascript">
	$(function() {
		dictionarySelectionInit();

		var clipboard_url   = new Clipboard('#clip-btn-url');
		var clipboard_get   = new Clipboard('#clip-btn-get');
		var clipboard_post1 = new Clipboard('#clip-btn-post1');
		var clipboard_post2 = new Clipboard('#clip-btn-post2');
		var clipboard_post3 = new Clipboard('#clip-btn-post3');
	});

	$('#dictionaries').change(function() {
		set_url();
	});

	$('#tokens_len_min').change(function() {
		set_url();
	});

	$('#tokens_len_max').change(function() {
		set_url();
	});

	$('#threshold').change(function() {
		set_url();
	});

	$("#abbreviation").change(function() {
		set_url();
	});

	$("#longest").change(function() {
		set_url();
	});

	$("#superfluous").change(function() {
		set_url();
	});

	$("#verbose").change(function() {
		set_url();
	});

	$("#ngram").change(function() {
		set_url();
	});

	$('#text_annotation').on('reset', function(e) {
		setTimeout(function() {
			dictionarySelectionReset();
			set_url();
		}, 0);
	});

	function set_url() {
		var params = [];

		if ($('#dictionaries').text()) {
			var param_dics = 'dictionary=' + $('#dictionaries').text();
			params.push(param_dics);
		}

		var tokens_len_min = $('#tokens_len_min').val();
		if (tokens_len_min != '') {
			var param = 'tokens_len_min=' + tokens_len_min;
			params.push(param);
		}

		var tokens_len_max = $('#tokens_len_max').val();
		if (tokens_len_max != '') {
			var param = 'tokens_len_max=' + tokens_len_max;
			params.push(param);
		}

		var threshold = $('#threshold').val();
		if (threshold != '') {
			var param = 'threshold=' + threshold;
			params.push(param);
		}

		var abbreviation = $('#abbreviation').is(':checked');
		if (abbreviation != <%= options_default[:abbreviation] %>) {
			var param = 'abbreviation=' + abbreviation;
			params.push(param);
		}

		var longest = $('#longest').is(':checked');
		if (longest != <%= options_default[:longest] %>) {
			var param = 'longest=' + longest;
			params.push(param);
		}

		var superfluous = $('#superfluous').is(':checked');
		if (superfluous != <%= options_default[:superfluous] %>) {
			var param = 'superfluous=' + superfluous;
			params.push(param);
		}

		var verbose = $('#verbose').is(':checked');
		if (verbose != <%= options_default[:verbose] %>) {
			var param = 'verbose=' + verbose;
			params.push(param);
		}

		var ngram = $('#ngram').is(':checked');
		if (ngram != <%= options_default[:ngram] %>) {
			var param = 'ngram=' + ngram;
			params.push(param);
		}

		var url = '<%= root_url %>text_annotation.json'
		if (params.length > 0) {url += '?' + params.join('&')}
		$('#rest_url').text(url);

		var command_get   = 'curl -G --data-urlencode text="example text" "' + url + '"';
		var command_post1 = 'curl -d text="example text" "' + url + '"';
		var command_post2 = 'curl -H "content-type:application/json" -d \'{"text":"example text"}\' "' + url + '"';
		var command_post3 = 'curl -H "content-type:text/plain" -d "example text" "' + url + '"';

		$('#curl_command_get').text(command_get);
		$('#curl_command_post1').text(command_post1);
		$('#curl_command_post2').text(command_post2);
		$('#curl_command_post3').text(command_post3);

		var batch_url = '<%= root_url %>annotation_tasks'
		if (params.length > 0) {batch_url += '?' + params.join('&')}
		$('#batch_rest_url').text(batch_url);

		var batch_command = 'curl -H "content-type:application/json" -d \'[{"text":"example text 1"},{"text":"example text 2"}]\' "' + batch_url + '"';
		$('#batch_curl_command').text(batch_command);
	}
</script>
